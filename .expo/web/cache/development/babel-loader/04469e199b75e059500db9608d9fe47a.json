{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useOnCellActiveAnimation = void 0;\n\nvar react_native_reanimated_1 = require(\"react-native-reanimated\");\n\nvar animatedValueContext_1 = require(\"../context/animatedValueContext\");\n\nvar cellContext_1 = require(\"../context/cellContext\");\n\nvar procs_1 = require(\"../procs\");\n\nvar useSpring_1 = require(\"./useSpring\");\n\nfunction useOnCellActiveAnimation(_a) {\n  var _b = _a === void 0 ? {\n    animationConfig: {}\n  } : _a,\n      animationConfig = _b.animationConfig;\n\n  var _c = useSpring_1.useSpring({\n    config: animationConfig\n  }),\n      clock = _c.clock,\n      state = _c.state,\n      config = _c.config;\n\n  var isDraggingCell = animatedValueContext_1.useAnimatedValues().isDraggingCell;\n  var isActive = cellContext_1.useIsActive();\n  react_native_reanimated_1.useCode(function () {\n    return react_native_reanimated_1.block([react_native_reanimated_1.onChange(isDraggingCell, [react_native_reanimated_1.set(config.toValue, react_native_reanimated_1.cond(isDraggingCell, 1, 0)), react_native_reanimated_1.startClock(clock)]), react_native_reanimated_1.cond(react_native_reanimated_1.clockRunning(clock), [procs_1.springFill(clock, state, config), react_native_reanimated_1.cond(state.finished, [react_native_reanimated_1.stopClock(clock), react_native_reanimated_1.set(state.finished, 0), react_native_reanimated_1.set(state.time, 0), react_native_reanimated_1.set(state.velocity, 0)])])]);\n  }, []);\n  return {\n    isActive: isActive,\n    onActiveAnim: state.position\n  };\n}\n\nexports.useOnCellActiveAnimation = useOnCellActiveAnimation;","map":{"version":3,"sources":["/home/pagoto/Desktop/GITHUB/SipTender/node_modules/react-native-draggable-flatlist/lib/hooks/useOnCellActiveAnimation.js"],"names":["Object","defineProperty","exports","value","useOnCellActiveAnimation","react_native_reanimated_1","require","animatedValueContext_1","cellContext_1","procs_1","useSpring_1","_a","_b","animationConfig","_c","useSpring","config","clock","state","isDraggingCell","useAnimatedValues","isActive","useIsActive","useCode","block","onChange","set","toValue","cond","startClock","clockRunning","springFill","finished","stopClock","time","velocity","onActiveAnim","position"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,wBAAR,GAAmC,KAAK,CAAxC;;AACA,IAAIC,yBAAyB,GAAGC,OAAO,CAAC,yBAAD,CAAvC;;AACA,IAAIC,sBAAsB,GAAGD,OAAO,mCAApC;;AACA,IAAIE,aAAa,GAAGF,OAAO,0BAA3B;;AACA,IAAIG,OAAO,GAAGH,OAAO,YAArB;;AACA,IAAII,WAAW,GAAGJ,OAAO,eAAzB;;AACA,SAASF,wBAAT,CAAkCO,EAAlC,EAAsC;AAClC,MAAIC,EAAE,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB;AAAEE,IAAAA,eAAe,EAAE;AAAnB,GAAhB,GAA0CF,EAAnD;AAAA,MAAuDE,eAAe,GAAGD,EAAE,CAACC,eAA5E;;AACA,MAAIC,EAAE,GAAGJ,WAAW,CAACK,SAAZ,CAAsB;AAAEC,IAAAA,MAAM,EAAEH;AAAV,GAAtB,CAAT;AAAA,MAA6DI,KAAK,GAAGH,EAAE,CAACG,KAAxE;AAAA,MAA+EC,KAAK,GAAGJ,EAAE,CAACI,KAA1F;AAAA,MAAiGF,MAAM,GAAGF,EAAE,CAACE,MAA7G;;AACA,MAAIG,cAAc,GAAGZ,sBAAsB,CAACa,iBAAvB,GAA2CD,cAAhE;AACA,MAAIE,QAAQ,GAAGb,aAAa,CAACc,WAAd,EAAf;AACAjB,EAAAA,yBAAyB,CAACkB,OAA1B,CAAkC,YAAY;AAC1C,WAAOlB,yBAAyB,CAACmB,KAA1B,CAAgC,CACnCnB,yBAAyB,CAACoB,QAA1B,CAAmCN,cAAnC,EAAmD,CAE/Cd,yBAAyB,CAACqB,GAA1B,CAA8BV,MAAM,CAACW,OAArC,EAA8CtB,yBAAyB,CAACuB,IAA1B,CAA+BT,cAA/B,EAA+C,CAA/C,EAAkD,CAAlD,CAA9C,CAF+C,EAG/Cd,yBAAyB,CAACwB,UAA1B,CAAqCZ,KAArC,CAH+C,CAAnD,CADmC,EAMnCZ,yBAAyB,CAACuB,IAA1B,CAA+BvB,yBAAyB,CAACyB,YAA1B,CAAuCb,KAAvC,CAA/B,EAA8E,CAC1ER,OAAO,CAACsB,UAAR,CAAmBd,KAAnB,EAA0BC,KAA1B,EAAiCF,MAAjC,CAD0E,EAE1EX,yBAAyB,CAACuB,IAA1B,CAA+BV,KAAK,CAACc,QAArC,EAA+C,CAC3C3B,yBAAyB,CAAC4B,SAA1B,CAAoChB,KAApC,CAD2C,EAE3CZ,yBAAyB,CAACqB,GAA1B,CAA8BR,KAAK,CAACc,QAApC,EAA8C,CAA9C,CAF2C,EAG3C3B,yBAAyB,CAACqB,GAA1B,CAA8BR,KAAK,CAACgB,IAApC,EAA0C,CAA1C,CAH2C,EAI3C7B,yBAAyB,CAACqB,GAA1B,CAA8BR,KAAK,CAACiB,QAApC,EAA8C,CAA9C,CAJ2C,CAA/C,CAF0E,CAA9E,CANmC,CAAhC,CAAP;AAgBH,GAjBD,EAiBG,EAjBH;AAkBA,SAAO;AACHd,IAAAA,QAAQ,EAAEA,QADP;AAEHe,IAAAA,YAAY,EAAElB,KAAK,CAACmB;AAFjB,GAAP;AAIH;;AACDnC,OAAO,CAACE,wBAAR,GAAmCA,wBAAnC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useOnCellActiveAnimation = void 0;\nvar react_native_reanimated_1 = require(\"react-native-reanimated\");\nvar animatedValueContext_1 = require(\"../context/animatedValueContext\");\nvar cellContext_1 = require(\"../context/cellContext\");\nvar procs_1 = require(\"../procs\");\nvar useSpring_1 = require(\"./useSpring\");\nfunction useOnCellActiveAnimation(_a) {\n    var _b = _a === void 0 ? { animationConfig: {} } : _a, animationConfig = _b.animationConfig;\n    var _c = useSpring_1.useSpring({ config: animationConfig }), clock = _c.clock, state = _c.state, config = _c.config;\n    var isDraggingCell = animatedValueContext_1.useAnimatedValues().isDraggingCell;\n    var isActive = cellContext_1.useIsActive();\n    react_native_reanimated_1.useCode(function () {\n        return react_native_reanimated_1.block([\n            react_native_reanimated_1.onChange(isDraggingCell, [\n                //@ts-ignore\n                react_native_reanimated_1.set(config.toValue, react_native_reanimated_1.cond(isDraggingCell, 1, 0)),\n                react_native_reanimated_1.startClock(clock),\n            ]),\n            react_native_reanimated_1.cond(react_native_reanimated_1.clockRunning(clock), [\n                procs_1.springFill(clock, state, config),\n                react_native_reanimated_1.cond(state.finished, [\n                    react_native_reanimated_1.stopClock(clock),\n                    react_native_reanimated_1.set(state.finished, 0),\n                    react_native_reanimated_1.set(state.time, 0),\n                    react_native_reanimated_1.set(state.velocity, 0),\n                ]),\n            ]),\n        ]);\n    }, []);\n    return {\n        isActive: isActive,\n        onActiveAnim: state.position,\n    };\n}\nexports.useOnCellActiveAnimation = useOnCellActiveAnimation;\n"]},"metadata":{},"sourceType":"script"}