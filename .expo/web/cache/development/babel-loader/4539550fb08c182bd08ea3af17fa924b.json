{"ast":null,"code":"var _this = this;\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Somar = function Somar(props) {\n  var volume = props.value;\n  var somar = 0;\n\n  for (var i = 0; i < volume.length; i++) {\n    somar = somar + volume[i].volume;\n  }\n\n  if (somar > 475) {\n    return _jsxs(View, {\n      style: styles.limite,\n      children: [_jsxs(Text, {\n        style: styles.text,\n        children: [\"Volume somado de \", somar, \"ML\"]\n      }), _jsx(Text, {\n        style: styles.text,\n        children: \"Excedeu a capacide de 475ML do copo\"\n      }), _jsxs(Text, {\n        style: styles.text,\n        children: [\"Favor diminuir \", somar - 475, \"ML!!!.\"]\n      })]\n    });\n  } else {\n    return _jsx(View, {\n      style: styles.correto,\n      children: _jsxs(Text, {\n        style: styles.text,\n        children: [\"Total: \", somar, \"ML\"]\n      })\n    });\n  }\n\n  _this.props.soma = somar;\n};\nvar styles = StyleSheet.create({\n  limite: {\n    padding: 10,\n    marginTop: 5,\n    marginBottom: 5,\n    elevation: 0.5,\n    backgroundColor: '#bd0016'\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    color: '#ffffff'\n  },\n  correto: {\n    padding: 10,\n    marginTop: 5,\n    marginBottom: 5,\n    elevation: 0.5,\n    backgroundColor: '#00960a'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    soma: state.auth.soma\n  };\n};\n\nvar SomarConnect = connect(mapStateToProps)(Somar);\nexport default SomarConnect;","map":{"version":3,"sources":["/home/pagoto/Desktop/GITHUB/SipTender/src/components/Somar.js"],"names":["React","connect","Somar","props","volume","value","somar","i","length","styles","limite","text","correto","soma","StyleSheet","create","padding","marginTop","marginBottom","elevation","backgroundColor","fontWeight","fontSize","color","mapStateToProps","state","auth","SomarConnect"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAAQC,OAAR,QAAsB,aAAtB;;;AAGA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAE5B,MAAIC,MAAM,GAAGD,KAAK,CAACE,KAAnB;AACA,MAAIC,KAAK,GAAC,CAAV;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,MAAM,CAACI,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAChCD,IAAAA,KAAK,GAAGA,KAAK,GAAGF,MAAM,CAACG,CAAD,CAAN,CAAUH,MAA1B;AACD;;AACD,MAAGE,KAAK,GAAG,GAAX,EAAe;AACb,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,MAAM,CAACC,MAApB;AAAA,iBACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA,wCAA4CL,KAA5C;AAAA,QADF,EAEE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACE,IAApB;AAAA;AAAA,QAFF,EAGE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACE,IAApB;AAAA,sCAA0CL,KAAK,GAAG,GAAlD;AAAA,QAHF;AAAA,MADF;AAQD,GATD,MASO;AACL,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,MAAM,CAACG,OAApB;AAAA,gBACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACE,IAApB;AAAA,8BAAkCL,KAAlC;AAAA;AADF,MADF;AAMD;;AACD,EAAA,KAAI,CAACH,KAAL,CAAWU,IAAX,GAAkBP,KAAlB;AAED,CA1BI;AA4BP,IAAMG,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,MAAM,EAAE;AACJM,IAAAA,OAAO,EAAE,EADL;AAEJC,IAAAA,SAAS,EAAE,CAFP;AAGJC,IAAAA,YAAY,EAAE,CAHV;AAIJC,IAAAA,SAAS,EAAE,GAJP;AAKJC,IAAAA,eAAe,EAAE;AALb,GADqB;AAQ7BT,EAAAA,IAAI,EAAE;AACJU,IAAAA,UAAU,EAAE,MADR;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,KAAK,EAAE;AAHH,GARuB;AAa7BX,EAAAA,OAAO,EAAE;AACPI,IAAAA,OAAO,EAAE,EADF;AAEPC,IAAAA,SAAS,EAAE,CAFJ;AAGPC,IAAAA,YAAY,EAAE,CAHP;AAIPC,IAAAA,SAAS,EAAE,GAJJ;AAKPC,IAAAA,eAAe,EAAE;AALV;AAboB,CAAlB,CAAf;;AAuBA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLZ,IAAAA,IAAI,EAACY,KAAK,CAACC,IAAN,CAAWb;AADX,GAAP;AAGD,CAJD;;AAMA,IAAMc,YAAY,GAAG1B,OAAO,CAAEuB,eAAF,CAAP,CAA0BtB,KAA1B,CAArB;AACA,eAAeyB,YAAf","sourcesContent":["import React from 'react';\nimport {View, StyleSheet, Text} from 'react-native';\nimport {connect} from 'react-redux';\n\n\nexport const Somar = (props) => {\n\n    let volume = props.value;\n    let somar=0;\n    for(let i=0; i<volume.length; i++){\n      somar = somar + volume[i].volume;\n    }\n    if(somar > 475){\n      return(\n        <View style={styles.limite}>\n          <Text style={styles.text}>Volume somado de {somar}ML</Text>\n          <Text style={styles.text}>Excedeu a capacide de 475ML do copo</Text>\n          <Text style={styles.text}>Favor diminuir {somar - 475}ML!!!.</Text>\n        \n        </View>\n      );\n    } else {\n      return(\n        <View style={styles.correto} >\n          <Text style={styles.text}>Total: {somar}ML</Text>\n        </View>\n       \n      );\n    }\n    this.props.soma = somar;\n    \n  };\n\nconst styles = StyleSheet.create({\n    limite: {\n        padding: 10,\n        marginTop: 5,\n        marginBottom: 5,\n        elevation: 0.5,\n        backgroundColor: '#bd0016',\n    },\n    text: {\n      fontWeight: 'bold',\n      fontSize: 20, \n      color: '#ffffff'\n    },\n    correto: {\n      padding: 10,\n      marginTop: 5,\n      marginBottom: 5,\n      elevation: 0.5,\n      backgroundColor: '#00960a',\n  }\n});\n\n\nconst mapStateToProps = (state) => {\n  return {\n    soma:state.auth.soma\n  };\n};\n\nconst SomarConnect = connect (mapStateToProps)(Somar);\nexport default SomarConnect;"]},"metadata":{},"sourceType":"module"}