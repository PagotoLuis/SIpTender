{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FormRow from \"../components/FormRow\";\nimport firebase from \"../components/firebaseConnection\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginPage = function (_React$Component) {\n  _inherits(LoginPage, _React$Component);\n\n  var _super = _createSuper(LoginPage);\n\n  function LoginPage(props) {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      senha: '',\n      isLoading: false,\n      message: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"onChangeandler\",\n    value: function onChangeandler(field, value) {\n      this.setState(_defineProperty({}, field, value));\n    }\n  }, {\n    key: \"getMsgByErrorCode\",\n    value: function getMsgByErrorCode(errorCode) {\n      switch (errorCode) {\n        case \"auth/wrong-password\":\n          return \"Senha Incorreta\";\n\n        case \"auth/invalid-email\":\n          return \"E-mail Invalido\";\n\n        case \"auth/user-not-found\":\n          return \"Usuario não encontrado\";\n\n        case \"auth/user-disable\":\n          return \"Usuario Desativado\";\n\n        case \"auth/email-already-in-use\":\n          return \"Usuario ja esta em uso\";\n\n        case \"auth/operation-not-allowed\":\n          return \"Operação não Permitida\";\n\n        case \"auth/weak-password\":\n          return \"Senha muito fraca\";\n\n        default:\n          return \"Erro desconhecido\";\n      }\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true,\n        message: \"\"\n      });\n      var _this$state = this.state,\n          email = _this$state.email,\n          senha = _this$state.senha;\n      var auth = firebase.getAuth();\n      console.log(auth);\n      return firebase.signInWithEmailAndPassword(auth, email, senha).then(function (user) {\n        console.log(\"Acesso Permitido\");\n\n        _this2.acessarApp();\n      }).catch(function (error) {\n        console.log(_this2.getMsgByErrorCode(error.code));\n\n        _this2.setState({\n          message: _this2.getMsgByErrorCode(error.code),\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"acessarApp\",\n    value: function acessarApp() {\n      this.setState({\n        isLoading: false\n      });\n      this.props.navigation.replace(\"HomePage\");\n    }\n  }, {\n    key: \"cadastrar\",\n    value: function cadastrar() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          senha = _this$state2.senha;\n      var auth = firebase.getAuth();\n      return firebase.createUserWithEmailAndPassword(auth, email, senha).then(function (user) {\n        _this3.acessarApp();\n      }).catch(function (error) {\n        _this3.setState({\n          message: _this3.getMsgByErrorCode(error.code),\n          isloading: false\n        });\n      });\n    }\n  }, {\n    key: \"solicitaCadastro\",\n    value: function solicitaCadastro() {\n      var _this4 = this;\n\n      var _this$state3 = this.state,\n          email = _this$state3.email,\n          senha = _this$state3.senha;\n\n      if (!email || !senha) {\n        Alert.alert(\"Cadastramento!\", \"Para se cadastrar informe e-mail e senha\");\n        return null;\n      }\n\n      Alert.alert(\"Cadastramento!\", \"Deseja cadastrar ser usuario com os dados informados?\", [{\n        text: \"CANCELAR\",\n        style: 'cancel'\n      }, {\n        text: \"Cadastrar\",\n        onPress: function onPress() {\n          _this4.cadastrar();\n        }\n      }]);\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      var _this5 = this;\n\n      if (this.state.isLoading) return _jsx(ActivityIndicator, {\n        size: \"large\",\n        style: styles.loading\n      });\n      return _jsxs(View, {\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this5.login();\n          },\n          style: styles.btn,\n          children: _jsx(Text, {\n            style: styles.item,\n            children: \"ENTRAR\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this5.solicitaCadastro();\n          },\n          style: styles.btn,\n          children: _jsx(Text, {\n            style: styles.item,\n            children: \"CADASTRE-SE\"\n          })\n        })]\n      });\n    }\n  }, {\n    key: \"renderMessage\",\n    value: function renderMessage() {\n      var _this6 = this;\n\n      var message = this.state.message;\n      if (!message) return null;\n      Alert.alert(\"Erro!\", message.toString(), [{\n        text: 'OK',\n        onPress: function onPress() {\n          _this6.setState({\n            message: ''\n          });\n        }\n      }]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return _jsx(KeyboardAvoidingView, {\n        behavior: \"height\",\n        enable: true,\n        style: {\n          flex: 1\n        },\n        children: _jsx(ImageBackground, {\n          source: require(\"../img/ImgLogin.png\"),\n          style: styles.bg,\n          children: _jsxs(ScrollView, {\n            children: [_jsx(View, {\n              style: styles.tituloView,\n              children: _jsx(Image, {\n                style: styles.tinyLogo,\n                source: require(\"../img/logo.png\")\n              })\n            }), _jsx(FormRow, {\n              children: _jsx(TextInput, {\n                style: styles.input,\n                placeholder: \"user@email.com\",\n                keyboardType: \"email-address\",\n                value: this.state.email,\n                onChangeText: function onChangeText(value) {\n                  return _this7.onChangeandler('email', value);\n                }\n              })\n            }), _jsx(FormRow, {\n              children: _jsx(TextInput, {\n                style: styles.input,\n                placeholder: \"*****\",\n                secureTextEntry: true,\n                value: this.state.senha,\n                onChangeText: function onChangeText(value) {\n                  return _this7.onChangeandler('senha', value);\n                }\n              })\n            }), this.renderButton(), this.renderMessage()]\n          })\n        })\n      });\n    }\n  }]);\n\n  return LoginPage;\n}(React.Component);\n\nexport { LoginPage as default };\nvar styles = StyleSheet.create({\n  linearGradient: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderRadius: 5\n  },\n  titulo: {\n    fontSize: 80,\n    textAlign: 'center',\n    color: '#ffffff'\n  },\n  tituloView: {\n    paddingTop: 100,\n    paddingBottom: 50,\n    alignItems: 'center'\n  },\n  input: {\n    paddingLeft: 20,\n    paddingRight: 20,\n    height: 60,\n    backgroundColor: '#ffffff',\n    opacity: 0.7,\n    borderRadius: 20\n  },\n  loading: {\n    padding: 20\n  },\n  btn: {\n    padding: 20,\n    margin: 10,\n    fontSize: 11,\n    borderRadius: 20,\n    backgroundColor: '#042e80',\n    opacity: 0.7\n  },\n  item: {\n    color: '#ffffff',\n    textAlign: 'center',\n    fontSize: 20\n  },\n  bg: {\n    flex: 1,\n    width: null\n  },\n  tinyLogo: {\n    width: 300,\n    height: 240\n  }\n});","map":{"version":3,"sources":["/home/pagoto/Desktop/GITHUB/SipTender/src/pages/LoginPage.js"],"names":["React","FormRow","firebase","LoginPage","props","state","email","senha","isLoading","message","field","value","setState","errorCode","auth","getAuth","console","log","signInWithEmailAndPassword","then","user","acessarApp","catch","error","getMsgByErrorCode","code","navigation","replace","createUserWithEmailAndPassword","isloading","Alert","alert","text","style","onPress","cadastrar","styles","loading","login","btn","item","solicitaCadastro","toString","flex","require","bg","tituloView","tinyLogo","input","onChangeandler","renderButton","renderMessage","Component","StyleSheet","create","linearGradient","paddingLeft","paddingRight","borderRadius","titulo","fontSize","textAlign","color","paddingTop","paddingBottom","alignItems","height","backgroundColor","opacity","padding","margin","width"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;;;;AAEA,OAAOC,OAAP;AACA,OAAOC,QAAP;;;;IAGqBC,S;;;;;AAEjB,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAC,EADG;AAETC,MAAAA,KAAK,EAAC,EAFG;AAGTC,MAAAA,SAAS,EAAE,KAHF;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAb;AAFc;AAQjB;;;;WAED,wBAAeC,KAAf,EAAsBC,KAAtB,EAA4B;AACxB,WAAKC,QAAL,qBAAgBF,KAAhB,EAAwBC,KAAxB;AACH;;;WAED,2BAAkBE,SAAlB,EAA4B;AACxB,cAAQA,SAAR;AACI,aAAK,qBAAL;AACI,iBAAO,iBAAP;;AACJ,aAAK,oBAAL;AACI,iBAAO,iBAAP;;AACJ,aAAK,qBAAL;AACI,iBAAO,wBAAP;;AACJ,aAAK,mBAAL;AACI,iBAAO,oBAAP;;AACJ,aAAK,2BAAL;AACI,iBAAO,wBAAP;;AACJ,aAAK,4BAAL;AACI,iBAAO,wBAAP;;AACJ,aAAK,oBAAL;AACI,iBAAO,mBAAP;;AACJ;AACI,iBAAO,mBAAP;AAhBR;AAkBH;;;WAED,iBAAO;AAAA;;AACH,WAAKD,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE,IAAb;AAAmBC,QAAAA,OAAO,EAAE;AAA5B,OAAd;AACA,wBAAuB,KAAKJ,KAA5B;AAAA,UAAOC,KAAP,eAAOA,KAAP;AAAA,UAAcC,KAAd,eAAcA,KAAd;AACA,UAAIO,IAAI,GAAGZ,QAAQ,CAACa,OAAT,EAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,aAAOZ,QAAQ,CACdgB,0BADM,CACqBJ,IADrB,EAC2BR,KAD3B,EACkCC,KADlC,EAENY,IAFM,CAED,UAAAC,IAAI,EAAI;AACVJ,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,QAAA,MAAI,CAACI,UAAL;AACH,OALM,EAMNC,KANM,CAMA,UAAAC,KAAK,EAAI;AACZP,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACO,iBAAL,CAAuBD,KAAK,CAACE,IAA7B,CAAZ;;AACA,QAAA,MAAI,CAACb,QAAL,CAAc;AACVH,UAAAA,OAAO,EAAE,MAAI,CAACe,iBAAL,CAAuBD,KAAK,CAACE,IAA7B,CADC;AAEVjB,UAAAA,SAAS,EAAE;AAFD,SAAd;AAIH,OAZM,CAAP;AAaH;;;WAED,sBAAY;AACR,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,WAAKJ,KAAL,CAAWsB,UAAX,CAAsBC,OAAtB,CAA8B,UAA9B;AACH;;;WAED,qBAAW;AAAA;;AACP,yBAAwB,KAAKtB,KAA7B;AAAA,UAAOC,KAAP,gBAAOA,KAAP;AAAA,UAAcC,KAAd,gBAAcA,KAAd;AACA,UAAIO,IAAI,GAAGZ,QAAQ,CAACa,OAAT,EAAX;AACA,aAAOb,QAAQ,CACV0B,8BADE,CAC6Bd,IAD7B,EACmCR,KADnC,EAC0CC,KAD1C,EAEFY,IAFE,CAEG,UAAAC,IAAI,EAAI;AACV,QAAA,MAAI,CAACC,UAAL;AACH,OAJE,EAKFC,KALE,CAKI,UAAAC,KAAK,EAAI;AACZ,QAAA,MAAI,CAACX,QAAL,CAAc;AACVH,UAAAA,OAAO,EAAE,MAAI,CAACe,iBAAL,CAAuBD,KAAK,CAACE,IAA7B,CADC;AAEVI,UAAAA,SAAS,EAAE;AAFD,SAAd;AAIH,OAVE,CAAP;AAWH;;;WAED,4BAAkB;AAAA;;AACd,yBAAuB,KAAKxB,KAA5B;AAAA,UAAOC,KAAP,gBAAOA,KAAP;AAAA,UAAcC,KAAd,gBAAcA,KAAd;;AAEA,UAAG,CAACD,KAAD,IAAU,CAACC,KAAd,EAAoB;AAChBuB,QAAAA,KAAK,CAACC,KAAN,CACI,gBADJ,EAEI,0CAFJ;AAIA,eAAO,IAAP;AAEH;;AACDD,MAAAA,KAAK,CAACC,KAAN,CACI,gBADJ,EAEI,uDAFJ,EAGI,CAAC;AACGC,QAAAA,IAAI,EAAE,UADT;AAEGC,QAAAA,KAAK,EAAE;AAFV,OAAD,EAIE;AACED,QAAAA,IAAI,EAAE,WADR;AAEEE,QAAAA,OAAO,EAAE,mBAAM;AAAC,UAAA,MAAI,CAACC,SAAL;AAAiB;AAFnC,OAJF,CAHJ;AAYH;;;WAGD,wBAAc;AAAA;;AACV,UAAG,KAAK9B,KAAL,CAAWG,SAAd,EAAyB,OAAO,KAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAE4B,MAAM,CAACC;AAA9C,QAAP;AACzB,aACI,MAAC,IAAD;AAAA,mBACI,KAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,KAAL,EAAN;AAAA,WAA3B;AAA+C,UAAA,KAAK,EAAEF,MAAM,CAACG,GAA7D;AAAA,oBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEH,MAAM,CAACI,IAApB;AAAA;AAAA;AADJ,UADJ,EAKI,KAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,gBAAL,EAAN;AAAA,WAA3B;AAA0D,UAAA,KAAK,EAAEL,MAAM,CAACG,GAAxE;AAAA,oBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEH,MAAM,CAACI,IAApB;AAAA;AAAA;AADJ,UALJ;AAAA,QADJ;AAYH;;;WAED,yBAAe;AAAA;;AACX,UAAO/B,OAAP,GAAkB,KAAKJ,KAAvB,CAAOI,OAAP;AACA,UAAG,CAACA,OAAJ,EACI,OAAO,IAAP;AAEJqB,MAAAA,KAAK,CAACC,KAAN,CACI,OADJ,EAEItB,OAAO,CAACiC,QAAR,EAFJ,EAGI,CAAC;AACGV,QAAAA,IAAI,EAAE,IADT;AAEGE,QAAAA,OAAO,EAAE,mBAAM;AAAC,UAAA,MAAI,CAACtB,QAAL,CAAc;AAACH,YAAAA,OAAO,EAAE;AAAV,WAAd;AAA+B;AAFlD,OAAD,CAHJ;AAQH;;;WAED,kBAAQ;AAAA;;AACJ,aACI,KAAC,oBAAD;AAAsB,QAAA,QAAQ,EAAC,QAA/B;AAAwC,QAAA,MAAM,MAA9C;AAA+C,QAAA,KAAK,EAAE;AAACkC,UAAAA,IAAI,EAAE;AAAP,SAAtD;AAAA,kBACI,KAAC,eAAD;AAAiB,UAAA,MAAM,EAAEC,OAAO,uBAAhC;AAAyD,UAAA,KAAK,EAAGR,MAAM,CAACS,EAAxE;AAAA,oBACI,MAAC,UAAD;AAAA,uBAEI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAET,MAAM,CAACU,UAApB;AAAA,wBACA,KAAC,KAAD;AAAO,gBAAA,KAAK,EAAEV,MAAM,CAACW,QAArB;AAEI,gBAAA,MAAM,EAAEH,OAAO;AAFnB;AADA,cAFJ,EASI,KAAC,OAAD;AAAA,wBACA,KAAC,SAAD;AACI,gBAAA,KAAK,EAAER,MAAM,CAACY,KADlB;AAEI,gBAAA,WAAW,EAAC,gBAFhB;AAGI,gBAAA,YAAY,EAAC,eAHjB;AAII,gBAAA,KAAK,EAAG,KAAK3C,KAAL,CAAWC,KAJvB;AAKI,gBAAA,YAAY,EAAE,sBAAAK,KAAK;AAAA,yBAAI,MAAI,CAACsC,cAAL,CAAoB,OAApB,EAA6BtC,KAA7B,CAAJ;AAAA;AALvB;AADA,cATJ,EAmBI,KAAC,OAAD;AAAA,wBACI,KAAC,SAAD;AACI,gBAAA,KAAK,EAAGyB,MAAM,CAACY,KADnB;AAEI,gBAAA,WAAW,EAAC,OAFhB;AAGI,gBAAA,eAAe,MAHnB;AAII,gBAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWE,KAJtB;AAKI,gBAAA,YAAY,EAAE,sBAAAI,KAAK;AAAA,yBAAI,MAAI,CAACsC,cAAL,CAAoB,OAApB,EAA6BtC,KAA7B,CAAJ;AAAA;AALvB;AADJ,cAnBJ,EA4BK,KAAKuC,YAAL,EA5BL,EA6BK,KAAKC,aAAL,EA7BL;AAAA;AADJ;AADJ,QADJ;AAsCH;;;;EA9KkCnD,KAAK,CAACoD,S;;SAAxBjD,S;AAiLrB,IAAMiC,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,cAAc,EAAE;AACZZ,IAAAA,IAAI,EAAE,CADM;AAEZa,IAAAA,WAAW,EAAE,EAFD;AAGZC,IAAAA,YAAY,EAAE,EAHF;AAIZC,IAAAA,YAAY,EAAE;AAJF,GADa;AAQ7BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,SAAS,EAAE,QAFP;AAGJC,IAAAA,KAAK,EAAC;AAHF,GARqB;AAa7BhB,EAAAA,UAAU,EAAC;AACPiB,IAAAA,UAAU,EAAE,GADL;AAEPC,IAAAA,aAAa,EAAE,EAFR;AAGPC,IAAAA,UAAU,EAAE;AAHL,GAbkB;AAkB7BjB,EAAAA,KAAK,EAAE;AACHQ,IAAAA,WAAW,EAAE,EADV;AAEHC,IAAAA,YAAY,EAAE,EAFX;AAGHS,IAAAA,MAAM,EAAE,EAHL;AAIHC,IAAAA,eAAe,EAAE,SAJd;AAKHC,IAAAA,OAAO,EAAE,GALN;AAMHV,IAAAA,YAAY,EAAE;AANX,GAlBsB;AA0B7BrB,EAAAA,OAAO,EAAE;AACLgC,IAAAA,OAAO,EAAE;AADJ,GA1BoB;AA6B7B9B,EAAAA,GAAG,EAAC;AACA8B,IAAAA,OAAO,EAAE,EADT;AAEAC,IAAAA,MAAM,EAAE,EAFR;AAGAV,IAAAA,QAAQ,EAAE,EAHV;AAIAF,IAAAA,YAAY,EAAE,EAJd;AAKAS,IAAAA,eAAe,EAAE,SALjB;AAMAC,IAAAA,OAAO,EAAE;AANT,GA7ByB;AAqC7B5B,EAAAA,IAAI,EAAC;AACDsB,IAAAA,KAAK,EAAE,SADN;AAEDD,IAAAA,SAAS,EAAE,QAFV;AAGDD,IAAAA,QAAQ,EAAE;AAHT,GArCwB;AA0C7Bf,EAAAA,EAAE,EAAC;AACCF,IAAAA,IAAI,EAAC,CADN;AAEC4B,IAAAA,KAAK,EAAC;AAFP,GA1C0B;AA8C7BxB,EAAAA,QAAQ,EAAE;AACNwB,IAAAA,KAAK,EAAE,GADD;AAENL,IAAAA,MAAM,EAAE;AAFF;AA9CmB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { ImageBackground, TouchableOpacity, TextInput, StyleSheet, Text, ScrollView, View, Image, KeyboardAvoidingView, ActivityIndicator, Alert } from 'react-native'; \nimport FormRow from '../components/FormRow';\nimport firebase from '../components/firebaseConnection';\n\n\nexport default class LoginPage extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            email:'',\n            senha:'',\n            isLoading: false,\n            message: \"\",\n        }\n    }\n\n    onChangeandler(field, value){\n        this.setState({[field]: value});\n    }\n\n    getMsgByErrorCode(errorCode){\n        switch (errorCode){\n            case \"auth/wrong-password\":\n                return \"Senha Incorreta\";\n            case \"auth/invalid-email\":\n                return \"E-mail Invalido\";\n            case \"auth/user-not-found\":\n                return \"Usuario não encontrado\";\n            case \"auth/user-disable\":\n                return \"Usuario Desativado\";\n            case \"auth/email-already-in-use\":\n                return \"Usuario ja esta em uso\";\n            case \"auth/operation-not-allowed\":\n                return \"Operação não Permitida\";\n            case \"auth/weak-password\":\n                return \"Senha muito fraca\";\n            default:\n                return \"Erro desconhecido\";\n        }\n    }\n\n    login(){\n        this.setState({ isLoading: true, message: \"\"});\n        const {email, senha} = this.state;\n        var auth = firebase.getAuth()\n        console.log(auth)\n        return firebase\n        .signInWithEmailAndPassword(auth, email, senha)\n        .then(user => {\n            console.log(\"Acesso Permitido\");\n            this.acessarApp();\n        })\n        .catch(error => {\n            console.log(this.getMsgByErrorCode(error.code));\n            this.setState({\n                message: this.getMsgByErrorCode(error.code),\n                isLoading: false\n            });\n        })\n    }\n\n    acessarApp(){\n        this.setState({ isLoading: false});\n        this.props.navigation.replace(\"HomePage\");\n    }\n\n    cadastrar(){\n        const {email, senha } = this.state;\n        var auth = firebase.getAuth()\n        return firebase\n            .createUserWithEmailAndPassword(auth, email, senha)\n            .then(user => {\n                this.acessarApp();\n            })\n            .catch(error => {\n                this.setState({\n                    message: this.getMsgByErrorCode(error.code),\n                    isloading: false \n                });\n            })\n    }\n\n    solicitaCadastro(){\n        const {email, senha} = this.state;\n        \n        if(!email || !senha){\n            Alert.alert(\n                \"Cadastramento!\",\n                \"Para se cadastrar informe e-mail e senha\"\n            );\n            return null;\n\n        }\n        Alert.alert(\n            \"Cadastramento!\",\n            \"Deseja cadastrar ser usuario com os dados informados?\",\n            [{\n                text: \"CANCELAR\",\n                style: 'cancel'\n\n            },{\n                text: \"Cadastrar\",\n                onPress: () => {this.cadastrar()}\n            }],\n        )\n    }\n\n\n    renderButton(){\n        if(this.state.isLoading) return <ActivityIndicator size=\"large\" style={styles.loading} />;\n        return(\n            <View>\n                <TouchableOpacity onPress={() => this.login()} style={styles.btn}>\n                    <Text style={styles.item}>ENTRAR</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity onPress={() => this.solicitaCadastro()} style={styles.btn}>\n                    <Text style={styles.item}>CADASTRE-SE</Text>\n                </TouchableOpacity>\n\n            </View>\n        )\n    }\n\n    renderMessage(){\n        const {message} = this.state;\n        if(!message)\n            return null;\n\n        Alert.alert(\n            \"Erro!\",\n            message.toString(),\n            [{\n                text: 'OK',\n                onPress: () => {this.setState({message: '' });}\n            }]\n        );\n    }\n\n    render(){\n        return (\n            <KeyboardAvoidingView behavior=\"height\" enable style={{flex: 1}}>\n                <ImageBackground source={require('../img/ImgLogin.png')} style= {styles.bg}>\n                    <ScrollView>\n\n                        <View style={styles.tituloView}>\n                        <Image style={styles.tinyLogo}\n                           \n                            source={require('../img/logo.png')}\n                        />\n                        </View>\n\n                        <FormRow>\n                        <TextInput  \n                            style={styles.input}\n                            placeholder='user@email.com' \n                            keyboardType='email-address'\n                            value={ this.state.email}\n                            onChangeText={value => this.onChangeandler('email', value)}\n                            \n                        />\n                        </FormRow>\n                        <FormRow>\n                            <TextInput \n                                style= {styles.input} \n                                placeholder=\"*****\" \n                                secureTextEntry\n                                value={this.state.senha}\n                                onChangeText={value => this.onChangeandler('senha', value)}\n                            />\n                        </FormRow>\n                        {this.renderButton()}  \n                        {this.renderMessage()}  \n                    </ScrollView>\n                </ImageBackground>\n            </KeyboardAvoidingView>\n\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    linearGradient: {\n        flex: 1,\n        paddingLeft: 15,\n        paddingRight: 15,\n        borderRadius: 5\n      },\n\n    titulo: {\n        fontSize: 80,\n        textAlign: 'center',\n        color:'#ffffff',\n    },\n    tituloView:{\n        paddingTop: 100,\n        paddingBottom: 50,\n        alignItems: 'center'\n    },\n    input: {\n        paddingLeft: 20,\n        paddingRight: 20,\n        height: 60,\n        backgroundColor: '#ffffff',\n        opacity: 0.7,\n        borderRadius: 20,\n    },\n    loading: {\n        padding: 20,\n    },\n    btn:{\n        padding: 20,\n        margin: 10,\n        fontSize: 11,\n        borderRadius: 20,\n        backgroundColor: '#042e80',\n        opacity: 0.7,\n    },\n    item:{\n        color: '#ffffff',\n        textAlign: 'center',\n        fontSize: 20,\n    },\n    bg:{\n        flex:1,\n        width:null\n    },\n    tinyLogo: {\n        width: 300,\n        height: 240,\n      },\n    \n});\n"]},"metadata":{},"sourceType":"module"}