{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Icon from \"@expo/vector-icons/Feather\";\nimport Icon2 from \"@expo/vector-icons/EvilIcons\";\nimport ReceitasPage from \"./ReceitasPage\";\nimport UserPage from \"./UserPage\";\nimport InfoPage from \"./InfoPage\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport HomeStackScreen from \"./Montagem/HomeStackScreen\";\nimport * as Font from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\n\nvar HomePage = function (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  var _super = _createSuper(HomePage);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fontsLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadFonts();\n    }\n  }, {\n    key: \"loadFonts\",\n    value: function loadFonts() {\n      return _regeneratorRuntime.async(function loadFonts$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'Lobster-Regular': require(\"../../assets/fonts/Lobster-Regular.ttf\")\n              }));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.fontsLoaded) {\n        return _jsxs(_Fragment, {\n          children: [_jsxs(View, {\n            style: styles.superior,\n            children: [_jsx(Text, {\n              style: styles.titulo,\n              children: \"SipTender\"\n            }), _jsx(TouchableOpacity, {\n              style: {\n                flex: 1,\n                paddingRight: 20,\n                justifyContent: 'center'\n              },\n              onPress: function onPress() {\n                return _this2.props.navigation.navigate('ConfiguraPage');\n              },\n              children: _jsx(Icon2, {\n                name: \"gear\",\n                size: 40,\n                color: \"#ffffff\"\n              })\n            })]\n          }), _jsx(NavigationContainer, {\n            children: _jsxs(Tab.Navigator, {\n              screenOptions: function screenOptions() {\n                return {\n                  tabBarStyle: {\n                    height: 60,\n                    backgroundColor: '#0075e3'\n                  },\n                  tabBarShowLabel: false,\n                  tabBarActiveTintColor: '#000000',\n                  tabBarshowIcon: true,\n                  tabBarIndicatorStyle: {\n                    height: 3,\n                    backgroundColor: '#ffffff'\n                  }\n                };\n              },\n              children: [_jsx(Tab.Screen, {\n                name: \"Receitas\",\n                component: ReceitasPage,\n                height: 30,\n                options: function options() {\n                  return {\n                    tabBarIcon: function tabBarIcon() {\n                      return _jsx(Icon, {\n                        name: \"list\",\n                        size: 25,\n                        color: \"#ffffff\"\n                      });\n                    }\n                  };\n                }\n              }), _jsx(Tab.Screen, {\n                name: \"Preparo\",\n                height: 30,\n                component: HomeStackScreen,\n                options: function options() {\n                  return {\n                    tabBarIcon: function tabBarIcon() {\n                      return _jsx(Icon, {\n                        name: \"sliders\",\n                        size: 25,\n                        color: \"#ffffff\"\n                      });\n                    }\n                  };\n                }\n              }), _jsx(Tab.Screen, {\n                name: \"Perfil\",\n                component: UserPage,\n                height: 30,\n                options: function options() {\n                  return {\n                    tabBarIcon: function tabBarIcon() {\n                      return _jsx(Icon, {\n                        name: \"user\",\n                        size: 25,\n                        color: \"#ffffff\"\n                      });\n                    }\n                  };\n                }\n              }), _jsx(Tab.Screen, {\n                name: \"Info\",\n                component: InfoPage,\n                height: 30,\n                options: function options() {\n                  return {\n                    tabBarIcon: function tabBarIcon(_ref) {\n                      var tintColor = _ref.tintColor;\n                      return _jsx(Icon, {\n                        name: \"info\",\n                        size: 25,\n                        color: \"#ffffff\"\n                      });\n                    }\n                  };\n                }\n              })]\n            })\n          })]\n        });\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return HomePage;\n}(React.Component);\n\nexport { HomePage as default };\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  iconTabRound: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    marginBottom: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 6,\n    shadowColor: '#ffffff',\n    shadowOpacity: 0.2,\n    shadowRadius: 5\n  },\n  titulo: {\n    fontSize: 35,\n    paddingLeft: 20,\n    color: '#ffffff',\n    flex: 1,\n    fontFamily: 'Lobster-Regular'\n  },\n  superior: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignContent: 'space-between',\n    paddingTop: 42,\n    backgroundColor: '#0075e3'\n  }\n});","map":{"version":3,"sources":["/home/pagoto/Desktop/GITHUB/SipTender/src/pages/HomePage.js"],"names":["React","createMaterialTopTabNavigator","Icon","Icon2","ReceitasPage","UserPage","InfoPage","TouchableOpacity","NavigationContainer","HomeStackScreen","Font","Tab","HomePage","props","state","fontsLoaded","loadFonts","loadAsync","require","setState","styles","superior","titulo","flex","paddingRight","justifyContent","navigation","navigate","tabBarStyle","height","backgroundColor","tabBarShowLabel","tabBarActiveTintColor","tabBarshowIcon","tabBarIndicatorStyle","tabBarIcon","tintColor","Component","StyleSheet","create","container","alignItems","iconTabRound","width","borderRadius","marginBottom","elevation","shadowColor","shadowOpacity","shadowRadius","fontSize","paddingLeft","color","fontFamily","flexDirection","alignContent","paddingTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet} from 'react-native';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Icon from 'react-native-vector-icons/Feather';\nimport Icon2 from 'react-native-vector-icons/EvilIcons';\nimport ReceitasPage from './ReceitasPage';\nimport UserPage from './UserPage';\nimport InfoPage from './InfoPage';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport HomeStackScreen from './Montagem/HomeStackScreen';\nimport * as Font from 'expo-font';\n\nconst Tab = createMaterialTopTabNavigator();\n\nexport default class HomePage extends React.Component{\n  \n  \n\n  constructor(props){\n    super(props);\n    this.state = {\n      fontsLoaded: false\n    }\n    \n\n  }\n\n  componentDidMount() {\n    this.loadFonts();\n  }\n\n  async loadFonts() {\n    await Font.loadAsync({\n      'Lobster-Regular': require('../../assets/fonts/Lobster-Regular.ttf'),\n    });\n    this.setState({ fontsLoaded: true });\n  }\n\n  render(){\n  \n\n    if(this.state.fontsLoaded){return(\n      <>\n        <View style={styles.superior}>\n          <Text style={styles.titulo}>SipTender</Text>\n          <TouchableOpacity style={{ flex:1, paddingRight:20, justifyContent: 'center'}} \n            onPress={() => this.props.navigation.navigate('ConfiguraPage')}>\n            <Icon2 name=\"gear\" size={40} color='#ffffff'/>\n          </TouchableOpacity>    \n        </View>\n        \n        <NavigationContainer>\n          <Tab.Navigator \n            screenOptions={() => ({  \n              tabBarStyle:{height:60, backgroundColor:'#0075e3'},\n              tabBarShowLabel: false,\n              tabBarActiveTintColor: '#000000',\n              tabBarshowIcon: true,\n              tabBarIndicatorStyle:{height:3, backgroundColor: '#ffffff'}\n            })}\n            \n            \n          >\n            <Tab.Screen \n              name=\"Receitas\" \n              component={ReceitasPage}\n              height= {30}\n              options={() => ({\n                tabBarIcon: () => (\n                  <Icon name=\"list\" size={25} color='#ffffff'/>\n                ),\n              })}\n            />\n            <Tab.Screen name=\"Preparo\"\n              height= {30}\n              component={HomeStackScreen}\n              options={() => ({\n                tabBarIcon: () => (\n                  <Icon name=\"sliders\" size={25} color='#ffffff'/>\n                ),\n              })}\n            />\n            <Tab.Screen \n              name=\"Perfil\" \n              component={UserPage} \n              height= {30}\n              options={() => ({\n                tabBarIcon: () => (\n                  <Icon name=\"user\" size={25} color='#ffffff'/>\n                ),\n              })}\n            />\n            <Tab.Screen \n              name=\"Info\" \n              component={InfoPage} \n              height= {30}\n              options={() => ({\n                tabBarIcon: ({tintColor}) => (\n                  <Icon name=\"info\" size={25} color='#ffffff'/>\n                ),\n              })}\n            />         \n          </Tab.Navigator>\n        </NavigationContainer>\n      </>\n    );}else{\n      return null;\n    }\n  }\n  \n}\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center'\n\t},\n\ticonTabRound: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        marginBottom: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n        elevation: 6,\n        shadowColor: '#ffffff',\n        shadowOpacity: 0.2,\n        shadowRadius: 5,\n    },\n    titulo:{\n      fontSize:35,\n      paddingLeft: 20,\n      color: '#ffffff',\n      flex: 1,\n      fontFamily: 'Lobster-Regular'\n    },\n    superior:{\n      flexDirection: 'row',\n      alignItems: 'center',\n      alignContent: 'space-between',\n      paddingTop: 42,\n      backgroundColor: '#0075e3'\n    }\n});\n"]},"metadata":{},"sourceType":"module"}